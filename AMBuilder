# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

libcurl = builder.RunScript('curl/lib/AMBuilder')
libjansson = builder.RunScript('jansson/src/AMBuilder')
libmbedtls = builder.RunScript('mbedtls/library/AMBuilder')
libz = builder.RunScript('zlib/AMBuilder')

project = Extension.HL2Project(builder, 'rip.ext')
project.sources += [
  'extension.cpp',
  'curlapi.cpp',
  'curlthread.cpp',
  'curl_natives.cpp',
  'json_natives.cpp',
  'sdk/smsdk_ext.cpp',
]

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]

  binary = Extension.HL2Config(project, 'rip.ext', sdk)
  binary.compiler.includes += [
    os.path.join(builder.sourcePath, 'curl', 'include'),
    os.path.join(builder.sourcePath, 'jansson', 'include'),
  ]
  binary.compiler.defines += [
    'CURL_STATICLIB',
  ]

  if binary.compiler.vendor == 'gcc' or binary.compiler.vendor == 'clang':
    binary.compiler.cxxflags += ['-fno-rtti']
  elif binary.compiler.vendor == 'msvc':
    binary.compiler.cxxflags += ['/GR-']

  binary.compiler.postlink += [
    libcurl.binary,
    libjansson.binary,
    libmbedtls.binary,
    libz.binary,
  ]
  if builder.target_platform == 'linux':
    binary.compiler.postlink += ['-lrt']
  elif builder.target_platform == 'windows':
    binary.compiler.postlink += ['ws2_32.lib']

Extension.extensions = builder.Add(project)
